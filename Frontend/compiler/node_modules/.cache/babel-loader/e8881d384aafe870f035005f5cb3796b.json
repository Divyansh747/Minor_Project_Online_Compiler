{"ast":null,"code":"var _jsxFileName = \"/root/SVVV_6SEM/MinorProject/React/course/compiler/src/Components/Compiler.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Form, FormGroup, Input, Container, Button } from 'reactstrap';\nimport axios from 'axios';\nimport api from '../api/api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Compiler = () => {\n  _s();\n\n  useEffect(() => {\n    document.title = \"Compiler\";\n  }, []);\n  const [compiler, setCompiler] = useState({});\n\n  const handleForm = e => {\n    console.log(compiler);\n    postDataToServer(compiler);\n    e.preventDefault();\n  };\n\n  const postDataToServer = compiler => {\n    const language = document.getElementById(\"language\");\n    axios.post(`${api}/${language}`, compiler).then(response => {\n      console.log(response);\n      console.log(\"compiler api called\");\n    }, error => {\n      console.log(error);\n      console.log(\"error\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Compiler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Programming Language\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"select\",\n        id: \"language\",\n        onChange: e => {\n          setCompiler();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"cpp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"java\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"python\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Upload Code File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"file\",\n        onChange: e => {\n          setCompiler();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Upload Input File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Upload Expected Output File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        color: \"success\",\n        children: \"Add Course\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Compiler, \"Om7s28MRu1/yqK95Sw7p1xLJtgU=\");\n\n_c = Compiler;\nexport default Compiler;\n\nvar _c;\n\n$RefreshReg$(_c, \"Compiler\");","map":{"version":3,"sources":["/root/SVVV_6SEM/MinorProject/React/course/compiler/src/Components/Compiler.js"],"names":["useEffect","useState","Form","FormGroup","Input","Container","Button","axios","api","Compiler","document","title","compiler","setCompiler","handleForm","e","console","log","postDataToServer","preventDefault","language","getElementById","post","then","response","error"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react'\nimport {Form, FormGroup, Input, Container, Button} from 'reactstrap'\nimport axios from 'axios'\nimport api from '../api/api.js'\n\nconst Compiler = () => {\n    useEffect(() => {\n        document.title = \"Compiler\"\n    }, [])\n\n    const [compiler, setCompiler] = useState({})\n\n    const handleForm = (e) => {\n        console.log(compiler)\n        postDataToServer(compiler)\n        e.preventDefault()\n    }\n\n    const postDataToServer = (compiler) => {\n        const language = document.getElementById(\"language\")\n        axios.post(`${api}/${language}`,compiler).then(\n            (response) =>  {\n                console.log(response)\n                console.log(\"compiler api called\")\n            },(error) => {\n                console.log(error)\n                console.log(\"error\")\n            }\n        )\n    }\n\n    return(\n        <div>\n            <h1 className=\"text-center\">Compiler</h1>\n            \n            <FormGroup>\n                <label>Select Programming Language</label>\n                <br/>\n                <Input type=\"select\" id=\"language\" onChange={(e) => {\n                    setCompiler() }}>\n                    <option>c</option>\n                    <option>cpp</option>\n                    <option>java</option>\n                    <option>python</option>\n                </Input>\n            </FormGroup>\n\n            <FormGroup>\n                <label>Upload Code File</label>\n                <Input type=\"file\"  onChange={(e) => {\n                    setCompiler() }}></Input>\n            </FormGroup>\n\n            <FormGroup>\n                <label>Upload Input File</label>\n                <Input type=\"file\"></Input>\n            </FormGroup>\n\n            <FormGroup>\n                <label>Upload Expected Output File</label>\n                <Input type=\"file\"></Input>\n            </FormGroup>\n    \n            <Container className=\"text-center\">\n                    <Button type=\"submit\" color=\"success\">Add Course</Button>\n                    \n            </Container>\n\n        </div>\n    )\n}\n\nexport default Compiler"]},"metadata":{},"sourceType":"module"}