{"ast":null,"code":"var _jsxFileName = \"/root/SVVV_6SEM/MinorProject/React/course/compiler/src/Components/Compiler.js\";\nimport React from 'react';\nimport { Form, FormGroup, Input, Container, Button } from 'reactstrap';\nimport axios, { post } from 'axios';\nimport api from '../api/api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Compiler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      codeFile: null,\n      outputFile: null,\n      inputFile: null,\n      timeLimit: 8,\n      storageLimit: 80\n    };\n    this.handleForm = this.handleForm.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.postDataToServer = this.postDataToServer.bind(this);\n  }\n\n  componentDidMount() {\n    document.title = \"Compiler\";\n    console.log(\"title set\");\n  }\n\n  onChange(e) {\n    this.setState({\n      codeFile: e.target.files[0],\n      outputFile: e.target.files[1],\n      inputFile: e.target.files[2]\n    });\n  }\n\n  handleForm(e) {\n    e.preventDefault();\n    this.postDataToServer(this.state.codeFile, this.state.outputFile, this.state.inputFile, this.state.timeLimit, this.state.storageLimit).then(response => {\n      console.log(response);\n    });\n  }\n\n  postDataToServer(codeFile, outputFile, inputFile, timeLimit, storageLimit) {\n    const language = document.getElementById(\"language\").value;\n    const formData = new FormData();\n    formData.append('codeFile', codeFile);\n    formData.append('outputFile', outputFile);\n    formData.append('inputFile', inputFile);\n    formData.append('timeLimit', timeLimit);\n    formData.append('storageLimit', storageLimit);\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    /*return axios.post(`${api}/${language}`, formData).then(\n        (response) =>  {\n            console.log(response)\n            console.log(\"compiler api called\")\n        },(error) => {\n            console.log(error)\n            console.log(\"error\")\n        }\n    )*/\n\n    return post(`${api}/${language}`, formData, config);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Compiler\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.handleForm,\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select Programming Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"select\",\n            id: \"language\",\n            onChange: this.onChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"c\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"cpp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"java\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"python\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Upload Code File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"file\",\n            onChange: this.onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Upload Expected Output File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"file\",\n            onChange: this.onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Upload Input File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"file\",\n            onChange: this.onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            color: \"success\",\n            children: \"Compile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Output\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Compiler;","map":{"version":3,"sources":["/root/SVVV_6SEM/MinorProject/React/course/compiler/src/Components/Compiler.js"],"names":["React","Form","FormGroup","Input","Container","Button","axios","post","api","Compiler","Component","constructor","props","state","codeFile","outputFile","inputFile","timeLimit","storageLimit","handleForm","bind","onChange","postDataToServer","componentDidMount","document","title","console","log","e","setState","target","files","preventDefault","then","response","language","getElementById","value","formData","FormData","append","config","headers","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Form, FormGroup, Input, Container, Button} from 'reactstrap'\nimport axios, {post} from 'axios'\nimport api from '../api/api.js'\n\nclass Compiler extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            codeFile: null,\n            outputFile: null,\n            inputFile: null,\n            timeLimit: 8,\n            storageLimit: 80,\n        }\n        this.handleForm = this.handleForm.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.postDataToServer = this.postDataToServer.bind(this)\n    }\n\n    componentDidMount() {\n        document.title = \"Compiler\"\n        console.log(\"title set\")\n    }\n\n    onChange(e) {\n        this.setState({\n            codeFile: e.target.files[0], \n            outputFile: e.target.files[1],\n            inputFile: e.target.files[2],\n        })\n    }\n\n    handleForm(e) {\n        e.preventDefault()\n        this.postDataToServer(\n            this.state.codeFile, \n            this.state.outputFile, \n            this.state.inputFile, \n            this.state.timeLimit, \n            this.state.storageLimit\n            ).then((response) => {\n                console.log(response)\n            } )\n        \n    }\n\n    postDataToServer(codeFile, outputFile, inputFile, timeLimit, storageLimit) {\n        const language = document.getElementById(\"language\").value\n        const formData = new FormData()\n        \n        formData.append('codeFile',codeFile)\n        formData.append('outputFile', outputFile)\n        formData.append('inputFile', inputFile)\n        formData.append('timeLimit', timeLimit)\n        formData.append('storageLimit', storageLimit)\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        }\n        /*return axios.post(`${api}/${language}`, formData).then(\n            (response) =>  {\n                console.log(response)\n                console.log(\"compiler api called\")\n            },(error) => {\n                console.log(error)\n                console.log(\"error\")\n            }\n        )*/\n        return post(`${api}/${language}`, formData, config)\n    }\n\nrender() {\n    return(\n        <div>\n            <h1 className=\"text-center\">Compiler</h1>\n            <Form onSubmit={this.handleForm}>\n            <FormGroup>\n                <label>Select Programming Language</label>\n                <br/>\n                <Input type=\"select\" id=\"language\" onChange={this.onChange}>\n                    <option>c</option>\n                    <option>cpp</option>\n                    <option>java</option>\n                    <option>python</option>\n                </Input>\n            </FormGroup>\n\n            <FormGroup>\n                <label>Upload Code File</label>\n                <Input type=\"file\" onChange={this.onChange}></Input>\n            </FormGroup>\n\n            <FormGroup>\n                <label>Upload Expected Output File</label>\n                <Input type=\"file\" onChange={this.onChange}></Input>\n            </FormGroup>\n    \n            <FormGroup>\n                <label>Upload Input File</label>\n                <Input type=\"file\" onChange={this.onChange}></Input>\n            </FormGroup>\n\n            <Container className=\"text-center\">\n                    <Button type=\"submit\" color=\"success\">Compile</Button>\n            </Container>\n            \n            </Form>\n            <h3>Output</h3>\n            <p></p>\n        </div>\n    )\n}\n}\n\nexport default Compiler"]},"metadata":{},"sourceType":"module"}